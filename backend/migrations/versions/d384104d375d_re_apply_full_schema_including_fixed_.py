"""Re-apply full schema including fixed InstanciaAldea

Revision ID: d384104d375d
Revises: 7e860a253856
Create Date: 2025-07-18 23:18:26.956139

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'd384104d375d'
down_revision = '7e860a253856'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tipoanimal',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(length=255), nullable=False),
    sa.Column('descripcion', sa.Text(), nullable=True),
    sa.Column('id_grafico', sa.String(length=255), nullable=True),
    sa.Column('comportamiento_tipo', sa.String(length=100), nullable=False),
    sa.Column('es_montable', sa.Boolean(), nullable=False),
    sa.Column('recursos_obtenibles', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('resistencia_dano', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('nombre')
    )
    op.create_table('tipoedificio',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(length=255), nullable=False),
    sa.Column('descripcion', sa.Text(), nullable=True),
    sa.Column('id_grafico', sa.String(length=255), nullable=True),
    sa.Column('recursos_costo', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('efectos_aldea', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('max_por_aldea', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('nombre')
    )
    op.create_table('tipoeventoglobal',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(length=255), nullable=False),
    sa.Column('descripcion', sa.Text(), nullable=True),
    sa.Column('fase_activacion', sa.String(length=100), nullable=False),
    sa.Column('duracion_horas', sa.Integer(), nullable=True),
    sa.Column('efectos_mundo', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('objetivos_clan', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('recompensa_exito', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('consecuencia_fracaso', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('nombre')
    )
    op.create_table('tipohabilidad',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(length=255), nullable=False),
    sa.Column('descripcion', sa.Text(), nullable=True),
    sa.Column('tipo_habilidad', sa.String(length=100), nullable=False),
    sa.Column('coste_energia', sa.Integer(), nullable=False),
    sa.Column('cooldown_segundos', sa.Integer(), nullable=False),
    sa.Column('valores_habilidad', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('nombre')
    )
    op.create_table('tipoloottable',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(length=255), nullable=False),
    sa.Column('items', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('nombre')
    )
    op.create_table('tiponpc',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(length=255), nullable=False),
    sa.Column('descripcion', sa.Text(), nullable=True),
    sa.Column('id_grafico', sa.String(length=255), nullable=True),
    sa.Column('rol_npc', sa.String(length=100), nullable=False),
    sa.Column('comportamiento_ia', sa.Text(), nullable=True),
    sa.Column('habilidades_base', postgresql.ARRAY(sa.Integer()), nullable=True),
    sa.Column('valores_rol', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('resistencia_dano', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('nombre')
    )
    op.create_table('tipoobjeto',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(length=255), nullable=False),
    sa.Column('descripcion', sa.Text(), nullable=True),
    sa.Column('id_grafico', sa.String(length=255), nullable=True),
    sa.Column('tipo_objeto', sa.String(length=100), nullable=False),
    sa.Column('es_apilable', sa.Boolean(), nullable=True),
    sa.Column('peso_unidad', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('valores_especificos', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('nombre')
    )
    op.create_table('tiporecursoterreno',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(length=255), nullable=False),
    sa.Column('descripcion', sa.Text(), nullable=True),
    sa.Column('id_grafico', sa.String(length=255), nullable=True),
    sa.Column('salud_base', sa.Integer(), nullable=False),
    sa.Column('recursos_minables', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('efectividad_herramienta', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('nombre')
    )
    op.create_table('usuario',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('fecha_creacion', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('clan',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(length=255), nullable=False),
    sa.Column('descripcion', sa.Text(), nullable=True),
    sa.Column('id_lider_usuario', sa.Integer(), nullable=True),
    sa.Column('nivel_experiencia', sa.Integer(), nullable=False),
    sa.Column('id_inventario_baluarte', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_inventario_baluarte'], ['inventario.id'], ),
    sa.ForeignKeyConstraint(['id_lider_usuario'], ['usuario.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id_inventario_baluarte'),
    sa.UniqueConstraint('nombre')
    )
    op.create_table('tipocomercianteoferta',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_tipo_objeto_ofrecido', sa.Integer(), nullable=False),
    sa.Column('cantidad_ofrecida', sa.Integer(), nullable=False),
    sa.Column('id_tipo_objeto_demandado', sa.Integer(), nullable=False),
    sa.Column('cantidad_demandada', sa.Integer(), nullable=False),
    sa.Column('precio_base_moneda', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.ForeignKeyConstraint(['id_tipo_objeto_demandado'], ['tipoobjeto.id'], ),
    sa.ForeignKeyConstraint(['id_tipo_objeto_ofrecido'], ['tipoobjeto.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tipomision',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(length=255), nullable=False),
    sa.Column('descripcion', sa.Text(), nullable=True),
    sa.Column('id_tipo_npc_requerido', sa.Integer(), nullable=True),
    sa.Column('nivel_requerido', sa.Integer(), nullable=False),
    sa.Column('objetivos', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('recompensa', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['id_tipo_npc_requerido'], ['tiponpc.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('nombre')
    )
    op.create_table('tipopista',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(length=255), nullable=False),
    sa.Column('contenido', sa.Text(), nullable=True),
    sa.Column('tipo_contenido', sa.String(length=100), nullable=True),
    sa.Column('id_evento_asociado', sa.Integer(), nullable=True),
    sa.Column('ubicacion_juego', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['id_evento_asociado'], ['tipoeventoglobal.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('nombre')
    )
    op.create_table('mundo',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tipo_mundo', sa.String(length=50), nullable=False),
    sa.Column('id_propietario_clan', sa.Integer(), nullable=True),
    sa.Column('id_propietario_usuario', sa.Integer(), nullable=True),
    sa.Column('nombre_mundo', sa.String(length=255), nullable=True),
    sa.Column('semilla_generacion', sa.Text(), nullable=True),
    sa.Column('estado_actual_terreno', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('configuracion_actual', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['id_propietario_clan'], ['clan.id'], ),
    sa.ForeignKeyConstraint(['id_propietario_usuario'], ['usuario.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tipo_mundo', 'id_propietario_clan', name='_unique_clan_world_per_clan'),
    sa.UniqueConstraint('tipo_mundo', 'id_propietario_usuario', name='_unique_personal_world_per_user')
    )
    op.create_table('bastion',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_usuario', sa.Integer(), nullable=False),
    sa.Column('id_clan', sa.Integer(), nullable=True),
    sa.Column('nombre_personaje', sa.String(length=255), nullable=False),
    sa.Column('nivel', sa.Integer(), nullable=False),
    sa.Column('experiencia', sa.Integer(), nullable=False),
    sa.Column('posicion_actual', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('habilidades_aprendidas', postgresql.ARRAY(sa.Integer()), nullable=False),
    sa.Column('id_criatura_viva_base', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_clan'], ['clan.id'], ),
    sa.ForeignKeyConstraint(['id_criatura_viva_base'], ['criaturaviva_base.id'], ),
    sa.ForeignKeyConstraint(['id_usuario'], ['usuario.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id_criatura_viva_base'),
    sa.UniqueConstraint('id_usuario')
    )
    op.create_table('eventoglobalactivo',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_tipo_evento_global', sa.Integer(), nullable=False),
    sa.Column('id_mundo_clan', sa.Integer(), nullable=False),
    sa.Column('fase_actual', sa.String(length=100), nullable=False),
    sa.Column('fecha_inicio', sa.DateTime(), nullable=False),
    sa.Column('fecha_fin_fase_actual', sa.DateTime(), nullable=True),
    sa.Column('estado_logro_clanes', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('consecuencias_aplicadas', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['id_mundo_clan'], ['mundo.id'], ),
    sa.ForeignKeyConstraint(['id_tipo_evento_global'], ['tipoeventoglobal.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('instanciaaldea',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(length=255), nullable=True),
    sa.Column('id_mundo', sa.Integer(), nullable=False),
    sa.Column('posicion_central', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('id_clan_propietario', sa.Integer(), nullable=True),
    sa.Column('id_inventario_aldea', sa.Integer(), nullable=False),
    sa.Column('recursos_produccion_actual', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('nivel_defensa', sa.Integer(), nullable=False),
    sa.Column('id_danio_estructura_central', sa.Integer(), nullable=False),
    sa.Column('valores_dinamicos', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['id_clan_propietario'], ['clan.id'], ),
    sa.ForeignKeyConstraint(['id_danio_estructura_central'], ['dano.id'], ),
    sa.ForeignKeyConstraint(['id_inventario_aldea'], ['inventario.id'], ),
    sa.ForeignKeyConstraint(['id_mundo'], ['mundo.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id_danio_estructura_central'),
    sa.UniqueConstraint('id_inventario_aldea')
    )
    op.create_table('instanciaanimal',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_tipo_animal', sa.Integer(), nullable=False),
    sa.Column('id_criatura_viva_base', sa.Integer(), nullable=False),
    sa.Column('id_mundo', sa.Integer(), nullable=False),
    sa.Column('posicion', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('esta_vivo', sa.Boolean(), nullable=False),
    sa.Column('nivel_carino', sa.Integer(), nullable=False),
    sa.Column('id_dueno_usuario', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_criatura_viva_base'], ['criaturaviva_base.id'], ),
    sa.ForeignKeyConstraint(['id_dueno_usuario'], ['usuario.id'], ),
    sa.ForeignKeyConstraint(['id_mundo'], ['mundo.id'], ),
    sa.ForeignKeyConstraint(['id_tipo_animal'], ['tipoanimal.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id_criatura_viva_base')
    )
    op.create_table('instanciarecursoterreno',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_tipo_recurso_terreno', sa.Integer(), nullable=False),
    sa.Column('id_mundo', sa.Integer(), nullable=False),
    sa.Column('posicion', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('esta_agotado', sa.Boolean(), nullable=False),
    sa.Column('tiempo_reaparicion', sa.DateTime(), nullable=True),
    sa.Column('id_danio', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_danio'], ['dano.id'], ),
    sa.ForeignKeyConstraint(['id_mundo'], ['mundo.id'], ),
    sa.ForeignKeyConstraint(['id_tipo_recurso_terreno'], ['tiporecursoterreno.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id_danio')
    )
    op.create_table('instanciaedificio',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_tipo_edificio', sa.Integer(), nullable=False),
    sa.Column('id_aldea', sa.Integer(), nullable=False),
    sa.Column('posicion_relativa', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('esta_destruido', sa.Boolean(), nullable=False),
    sa.Column('estado_construccion', sa.String(length=50), nullable=True),
    sa.Column('id_danio', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_aldea'], ['instanciaaldea.id'], ),
    sa.ForeignKeyConstraint(['id_danio'], ['dano.id'], ),
    sa.ForeignKeyConstraint(['id_tipo_edificio'], ['tipoedificio.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id_danio')
    )
    op.create_table('instancianpc',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_tipo_npc', sa.Integer(), nullable=False),
    sa.Column('id_criatura_viva_base', sa.Integer(), nullable=False),
    sa.Column('id_mundo', sa.Integer(), nullable=False),
    sa.Column('posicion', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('esta_vivo', sa.Boolean(), nullable=False),
    sa.Column('id_aldea_pertenece', sa.Integer(), nullable=True),
    sa.Column('id_clan_pertenece', sa.Integer(), nullable=True),
    sa.Column('id_persona_pertenece', sa.Integer(), nullable=True),
    sa.Column('restriccion_area', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('valores_dinamicos', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['id_aldea_pertenece'], ['instanciaaldea.id'], ),
    sa.ForeignKeyConstraint(['id_clan_pertenece'], ['clan.id'], ),
    sa.ForeignKeyConstraint(['id_criatura_viva_base'], ['criaturaviva_base.id'], ),
    sa.ForeignKeyConstraint(['id_mundo'], ['mundo.id'], ),
    sa.ForeignKeyConstraint(['id_persona_pertenece'], ['usuario.id'], ),
    sa.ForeignKeyConstraint(['id_tipo_npc'], ['tiponpc.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id_criatura_viva_base')
    )
    op.create_table('misionactiva',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_tipo_mision', sa.Integer(), nullable=False),
    sa.Column('id_bastion', sa.Integer(), nullable=False),
    sa.Column('estado_mision', sa.String(length=50), nullable=False),
    sa.Column('progreso_objetivos', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('fecha_inicio', sa.DateTime(), nullable=False),
    sa.Column('fecha_completado', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['id_bastion'], ['bastion.id'], ),
    sa.ForeignKeyConstraint(['id_tipo_mision'], ['tipomision.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('interaccioncomercio',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_instancia_npc_comerciante', sa.Integer(), nullable=False),
    sa.Column('id_bastion_comprador', sa.Integer(), nullable=False),
    sa.Column('id_tipo_objeto_comprado', sa.Integer(), nullable=False),
    sa.Column('cantidad_comprada', sa.Integer(), nullable=False),
    sa.Column('id_tipo_objeto_vendido', sa.Integer(), nullable=True),
    sa.Column('cantidad_vendida', sa.Integer(), nullable=True),
    sa.Column('precio_total', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('fecha_interaccion', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['id_bastion_comprador'], ['bastion.id'], ),
    sa.ForeignKeyConstraint(['id_instancia_npc_comerciante'], ['instancianpc.id'], ),
    sa.ForeignKeyConstraint(['id_tipo_objeto_comprado'], ['tipoobjeto.id'], ),
    sa.ForeignKeyConstraint(['id_tipo_objeto_vendido'], ['tipoobjeto.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('dano', schema=None) as batch_op:
        batch_op.create_foreign_key(None, 'tipoloottable', ['loot_table_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('dano', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')

    op.drop_table('interaccioncomercio')
    op.drop_table('misionactiva')
    op.drop_table('instancianpc')
    op.drop_table('instanciaedificio')
    op.drop_table('instanciarecursoterreno')
    op.drop_table('instanciaanimal')
    op.drop_table('instanciaaldea')
    op.drop_table('eventoglobalactivo')
    op.drop_table('bastion')
    op.drop_table('mundo')
    op.drop_table('tipopista')
    op.drop_table('tipomision')
    op.drop_table('tipocomercianteoferta')
    op.drop_table('clan')
    op.drop_table('usuario')
    op.drop_table('tiporecursoterreno')
    op.drop_table('tipoobjeto')
    op.drop_table('tiponpc')
    op.drop_table('tipoloottable')
    op.drop_table('tipohabilidad')
    op.drop_table('tipoeventoglobal')
    op.drop_table('tipoedificio')
    op.drop_table('tipoanimal')
    # ### end Alembic commands ###
